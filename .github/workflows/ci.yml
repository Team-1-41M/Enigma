name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install -r server/requirements/test.txt
          flake8

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install -r server/requirements/base.txt
          pip install -r server/requirements/test.txt
          python3 -m pytest server/

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          touch .env

          echo "DEBUG=False" >> .env

          echo "NUXT_HOST=0.0.0.0" >> .env
          echo "NUXT_PORT=3000" >> .env
          echo "API_BASE_URL=localhost:8000" >> .env

          echo "SERVER_HOST=0.0.0.0" >> .env
          echo "SERVER_PORT=8000" >> .env
          echo "SERVER_RELOAD=False" >> .env

          echo "HTTPS=True" >> .env
          echo "CORS_ALLOWED_ORIGINS=localhost:3000" >> .env

          echo "SUPERUSER_NAME=root" >> .env
          echo "SUPERUSER_EMAIL=root@example.com" >> .env
          echo "SUPERUSER_PASSWORD=Master#chew123_$" >> .env

          echo "CACHE_TYPE=redis" >> .env
          echo "CACHE_HOST=cache" >> .env
          echo "CACHE_PORT=6379" >> .env
          echo "CACHE_DB=0" >> .env

          echo "DB_ENGINE=postgresql+asyncpg" >> .env
          echo "DB_NAME=enigma" >> .env
          echo "DB_USER=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env
          echo "DB_HOST=database" >> .env
          echo "DB_PORT=5432" >> .env

          cat .env

          docker compose build --no-cache