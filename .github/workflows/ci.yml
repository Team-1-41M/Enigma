name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install -r server/requirements/test.txt
          flake8

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install -r server/requirements/base.txt
          pip install -r server/requirements/test.txt
          python3 -m pytest server/

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          touch .env
          echo "DEBUG=${{ secrets.DEBUG }}" >> .env

          echo "NUXT_HOST=${{ secrets.NUXT_HOST }}" >> .env
          echo "NUXT_PORT=${{ secrets.NUXT_PORT }}" >> .env
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" >> .env

          echo "SERVER_HOST=${{ secrets.SERVER_HOST }}" >> .env
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env
          echo "SERVER_RELOAD=${{ secrets.SERVER_RELOAD }}" >> .env

          echo "HTTPS=${{ secrets.HTTPS }}" >> .env
          echo "CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}" >> .env

          echo "SUPERUSER_NAME=${{ secrets.SUPERUSER_NAME }}" >> .env
          echo "SUPERUSER_EMAIL=${{ secrets.SUPERUSER_EMAIL }}" >> .env
          echo "SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }}" >> .env

          echo "CACHE_TYPE=${{ secrets.CACHE_TYPE }}" >> .env
          echo "CACHE_HOST=${{ secrets.CACHE_HOST }}" >> .env
          echo "CACHE_PORT=${{ secrets.CACHE_PORT }}" >> .env
          echo "CACHE_DB=${{ secrets.CACHE_DB }}" >> .env

          echo "DB_ENGINE=${{ secrets.DB_ENGINE }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

          docker compose build --no-cache