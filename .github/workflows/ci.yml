name: CI

on: 
  push:
    branches: ["*"]
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install -r server/requirements/test.txt
          flake8

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install -r server/requirements/base.txt
          pip install -r server/requirements/test.txt
          python3 -m pytest server/

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          touch .env
          
          echo "DEBUG=$DEBUG" >> .env

          echo "NUXT_HOST=$NUXT_HOST" >> .env
          echo "NUXT_PORT=$NUXT_PORT" >> .env

          echo "API_BASE_URL=$API_BASE_URL" >> .env

          echo "SERVER_NAME=$SERVER_NAME" >> .env
          echo "SERVER_HOST=$SERVER_HOST" >> .env
          echo "SERVER_PORT=$SERVER_PORT" >> .env
          echo "SERVER_RELOAD=$SERVER_RELOAD" >> .env

          echo "HTTPS=$HTTPS" >> .env
          echo "CORS_ALLOWED_ORIGINS=$CORS_ALLOWED_ORIGINS" >> .env

          echo "SUPERUSER_NAME=$SUPERUSER_NAME" >> .env
          echo "SUPERUSER_EMAIL=$SUPERUSER_EMAIL" >> .env
          echo "SUPERUSER_PASSWORD=$SUPERUSER_PASSWORD" >> .env

          echo "CACHE_TYPE=$CACHE_TYPE" >> .env
          echo "CACHE_HOST=$CACHE_HOST" >> .env
          echo "CACHE_PORT=$CACHE_PORT" >> .env
          echo "CACHE_DB=$CACHE_DB" >> .env

          echo "DB_ENGINE=$DB_ENGINE" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_PORT=$DB_PORT" >> .env

          cat .env

          docker compose build --no-cache

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo $CR_PAT | docker login ${{ secrets.CI_REGISTRY }} -u ${{ secrets.CI_REGISTRY_USER }} --password-stdin