name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install -r server/requirements/test.txt
          flake8

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install -r server/requirements/base.txt
          pip install -r server/requirements/test.txt
          python3 -m pytest server/

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create environment file
        run: |
          touch .env

          echo ${{ secrets.DEBUG }} >> .env

          echo ${{ secrets.NUXT_HOST }} >> .env
          echo ${{ secrets.NUXT_PORT }} >> .env
          echo ${{ secrets.API_BASE_URL }} >> .env

          echo ${{ secrets.SERVER_HOST }} >> .env
          echo ${{ secrets.SERVER_PORT }} >> .env
          echo ${{ secrets.SERVER_RELOAD }} >> .env

          echo ${{ secrets.HTTPS }} >> .env
          echo ${{ secrets.CORS_ALLOWED_ORIGINS }} >> .env

          echo ${{ secrets.SUPERUSER_NAME }} >> .env
          echo ${{ secrets.SUPERUSER_EMAIL }} >> .env
          echo ${{ secrets.SUPERUSER_PASSWORD }} >> .env

          echo ${{ secrets.CACHE_TYPE }} >> .env
          echo ${{ secrets.CACHE_HOST }} >> .env
          echo ${{ secrets.CACHE_PORT }} >> .env
          echo ${{ secrets.CACHE_DB }} >> .env

          echo ${{ secrets.DB_ENGINE }} >> .env
          echo ${{ secrets.DB_NAME }} >> .env
          echo ${{ secrets.DB_USER }} >> .env
          echo ${{ secrets.DB_PASSWORD }} >> .env
          echo ${{ secrets.DB_HOST }} >> .env
          echo ${{ secrets.DB_PORT }} >> .env

      - name: Build Docker images
        run: |
          docker compose build --no-cache